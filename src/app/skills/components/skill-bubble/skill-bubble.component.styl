// Some important variables
$borderThickness = 2px                          // The thickness of the bubble-border
$arrowLength = 20px                             // The parallel length of arrow along connection
$arrowHeight = 10px                             // The cross height of arrow, 90deg to connection side
$cornerOffsetForBottom = 3px                    // offset of the arrow from nearest corner in case of bottom
$scaleFactor = 0.9
$cornerOffsetForSide = -( $borderThickness )    // offset of the arrow from nearest corner in case of sides

:host
  display: inline-block
  position: absolute

.skill-bubble
  position: relative
  border: $borderThickness solid
  border-radius: 10px
  padding: 5px 10px

  & > span
    position: relative
    z-index: 1


/*
 Setting up pseudo arrow classes
 We are only concerned with 3 sides: left, right and bottom
*/

$arrow-base
  height: 0
  width: 0
  border-style: solid

$arrow-corner-down
  @extend $arrow-base
  border-width: $arrowHeight $arrowLength
  margin-top: -( $arrowHeight )
  border-top-color: transparent;
  border-bottom-color: transparent;
  // left or right has yet to be decided

$arrow-corner-side
  @extend $arrow-base
  border-width: $arrowLength $arrowHeight
  border-left-color: transparent
  border-right-color: transparent
  // top or bottom has yet to be decided

$arrow-center-side
  @extend $arrow-base
  border-width: ($arrowLength / 2) $arrowHeight
  border-top-color: transparent
  border-bottom-color: transparent
  // left or right has yet to be decided


/* Setting up the arrow classes

primary side selection classes : .left, .right, .down
secondary classes for .left and .right : .top, .bottom, .center
secondary classes for .down : .down-left, .down-right, .center
*/
.arrow
  // z-index: 1 // Doesn't seem to work
  &::before
    // border-color: white // todo
    content: ''
    display: block
    position: absolute
    z-index: -1

  &::after
    // border-color: black // todo
    content: ''
    display: block
    position: absolute
    transform: scale($scaleFactor)

// 1. Setup Main Arrow side
.arrow.down
  &::before,
  &::after
    top: 100%

  &::after
    transform-origin: center -($arrowHeight);

.arrow.left
  &::before,
  &::after
    right: 100%

  &::after
    transform-origin: ($arrowHeight * 3) center;

.arrow.right
  &::before,
  &::after
    left: 100%

  &::after
    transform-origin: -($arrowHeight) center;

// 2. Setup secondary position
.arrow.down.down-left
  &::before,
  &::after
    @extend $arrow-corner-down
    border-right-color: transparent
    left: $cornerOffsetForBottom


.arrow.down.down-right
  &::before,
  &::after
    @extend $arrow-corner-down
    border-left-color: transparent
    right: $cornerOffsetForBottom


.arrow.down.center
  &::before,
  &::after
    @extend $arrow-base
    border-width: $arrowHeight ($arrowLength / 2)
    border-left-color: transparent
    border-right-color: transparent
    border-bottom-color: transparent
    left: "calc(50% - %s)" % ($arrowLength / 2)


.arrow.left.top,
.arrow.left.bottom
  &::before,
  &::after
    @extend $arrow-corner-side
    margin-right: -( $arrowHeight )

.arrow.left.center
  &::before,
  &::after
    @extend $arrow-center-side
    border-left-color: transparent

.arrow.right.top,
.arrow.right.bottom
  &::before,
  &::after
    @extend $arrow-corner-side
    margin-left: -( $arrowHeight )

.arrow.right.center
  &::before,
  &::after
    @extend $arrow-center-side
    border-right-color: transparent

.arrow.left.top,
.arrow.right.top
  &::before,
  &::after
    border-bottom-color: transparent
    top: $cornerOffsetForSide


.arrow.left.bottom,
.arrow.right.bottom
  &::before,
  &::after
    border-top-color: transparent
    bottom: $cornerOffsetForSide


.arrow.left.center,
.arrow.right.center
  &::before,
  &::after
    bottom: "calc(50% - %s)" % ($arrowLength / 2)
